/**
 * @file Untitled-6
 * @author your name (you@domain.com)
 * @brief 
 * @version 0.1
 * @date 2022-04-04
 * 
 * @copyright Copyright (c) 2022
 * this is Palindrome date;
 * Originally, I use simulation, but I make errors at the nineth node,
 * I never kown why has errors and the answer si 214, but my anser is 213;;
 * Then I find the key to exercises or problems;
 * and now feel the question is so easy;
 * enum is good;
 * judge whether equal to palindrome date;
 * I am foolish human;
 */
#include <iostream>
using namespace std;
int month[13] = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
int main(){
    int co = 0;
    int ans = 0;
    int n, m;
    cin>>n>>m;
    for(int i = 1; i <= 12; i++) {
        for(int j = 1; j <= month[i]; j++) {
            int c = (j%10)*1000 + (j/10)*100 + (i%10)*10 + i/10;
            int huiw = c*10000 + i*100 + j;
            if(huiw < n|| huiw > m) continue;
            ans++;
        }
    }
    cout<<ans;
}

/**
 * @e
 * #include <iostream>
#include <cstring>
using namespace std;
int coo, TheMonthDay, isDoub;
int a[10], b[10], c[10], rev[10];
bool Equal(int * a, int *b) {
    for(int i = 0; i < 8; i++) {
        if(a[i] != b[i]) return false;
    }
    return true;
}
bool isSuf(int *p, int *q) {
    for(int i = 0; i < 8; i++) {
        if(p[i] != q[i]) return false;
     }
     return true;
}
void reverse(int *s1, int *s2) {
    for(int i = 0; i < 8; i++) {
        s1[7 - i] = s2[i];
    }
}
void Clear(int *sf) {
    for(int i = 0; i < 8; i++) {
        sf[i] = 0;
    }
}
bool isDouble(int year) {

    if((year%4 == 0 && year%100 != 0) || year%400 == 0) return true;
    return false;
}
int isYear(int *s) {
    return s[0]*1000 + s[1]*100 + s[2]*10 + s[3];
}
int isMonth(int *s) {
    int month = 0;
    if(s[4]) {
        month = s[4]*10 + s[5];
        return month;
    } else {
        return s[5];
    }
}
int isDays(int *s) {
    if(s[6]) {
        return s[6]*10 + s[7];
    } else {
        return s[7];
    }
}
int tis_M_Ds(int month) {
    if(month = 2) {

    }
}
int Ex2MonthDay(int x) {
    if(x == 1 || x == 3 || x == 5 || x == 7 || x == 8 || x == 10 || x == 12) {
        return 31;
    } else {
        return 30;
    }
}
int main()
{
    string q1, q2;
    cin>>q1>>q2;
    for(int i = 0; i < 8; i++) a[i] = q1[i]- '0';
    for(int i = 0; i < 8; i++) b[i] = q2[i]-'0';
    while(1) {
        reverse(rev, a);
        if(isSuf(rev, a)) {
            for(int i = 0; i < 8; i++) cout<<a[i];
            cout<<endl;
            coo++;
        }
        int y, m, d, isMonthDay;
        if(Equal(a, b)) {
            break;
           ;
        }
        y = isYear(a); m = isMonth(a); d = isDays(a);
        if(m == 2) {
            if(isDouble(y)) {
                isMonthDay = 28;
            } else {
                isMonthDay = 29;
            }
        } else {
            isMonthDay = Ex2MonthDay(m);
        }
        a[7]++;
        d++;
        if(a[7] == 10) {
                a[7] = 0;
                a[6]++;}
        if(d > isMonthDay) {
            a[6] = 0; a[7] = 1;
            a[5]++;
            m++;
        } else {
            if(a[7] == 10) {
                a[7] = 0;
                a[6]++;
            }
        }
        if(m > 12) {
            a[5] = 1;
            a[4] = 0;
            a[3]++;
            y++;
        } else {
            if(a[5] == 10) {
                a[4] = 1;
                a[5] = 0;
            }
        }
        for(int i = 3; i >= 0; i--) {
            int sm = a[i];
            if(sm == 10) {
                a[i] = 0;
                a[i-1]++;
            }
        }
    }
    cout<<coo;
}
 * 
 */
