// Really amazing;Recursion can AC;
// You dont constantly recursion, only traverse one time ;
// So is easy;
//but it has a trap;
#include <bits/stdc++.h>
using namespace std;
int pace[23][23];
int gready[23][23];
int cont = 0;
int H, W;
void sett(int a, int b) {
  if(pace[a][b] == 2) { // if dont have this statement,
    return ;            // then will constantly traverse;
  }
 if(a>=0 && a<H && b>=0 && b<W && pace[a][b] >= 1) { // I find:
   if(pace[a][b] == 1) {
    cont++;
    pace[a][b] = 2;
   }
   sett(a-1,b); // the from line20 to line24 all have the statement ofline15
   sett(a+1,b); // So ONLY one statement and a if
   sett(a,b-1);
   sett(a,b+1);
 } else return ;
} 

int main()
{
 
  cin>>W>>H;
  char ch;
  int starti, startj;
  for(int i = 0; i < H; i++) {
    for(int j = 0; j < W; j++) {
      cin>>ch;
      if(ch == '.') {
        pace[i][j] = 1;
      }
      else if(ch == '#') {
        pace[i][j] = -1;
      }
      else if(ch == '@') {
        starti = i;
        startj = j;
        pace[i][j] = 1;
      }
    }
  }
  sett(starti,startj);
  cout<<cont;

}
