//is ordinary dynamic programming -- 01 knapsack;
// but I make a mistake;
// ...
#include <bits/stdc++.h>
using namespace std;
int thing[26];
int thingmoney[34];
int thingimport[44];
int dp[34][30002];
int main()
{
  int n,m;
  cin>>n>>m;
  for(int i = 1; i <= m; i++){
    cin>>thingmoney[i]>>thingimport[i];
    thing[i] = thingmoney[i]*thingimport[i];
  }
  for(int i = 1; i <= m; i++) { 
    for(int j = 0; j <= n; j++) {
      if(j > thingmoney[i])
      dp[i][j] = max(dp[i-1][j],dp[i - 1][j - thingmoney[i]] + thing[i]);
      else dp[i][j] = dp[i-1][j];
    }
  }
  cout<<dp[m][n];
}

/*
  make a mistake from line 18 to line 24;
  I think this is right:
  for(int i = 1; i <= m; i++)
  for(int j = thingmoney[i]; j <= n; j++)
    d[i][j] = max(dp[i-1][j],dp[i-1][j-thingminey[i]] + thing[i])
   but I do not think of a situation;
   that :
   one 12money / weight;
   two 33money / weight;
   so 
   become:
   000000000000(12 zero) value1 value1:
   000000000000000000000000000000000000(33 zero) value2 value2:
   but it should:
   0000000000000(12 zero)value1 value1 value(1 or 2);
   my error:
   aaaa ;
*/
