// I thought it was easy , but it turned out to be a mess;
//Such as judge at the lowest number, the two numbers are the same, 
//at this point ,how judge which number at the front is a trap,
// and I firstly do it not find this,
// Finally I find these questions,
// It took a long time to get it right;;
#include <bits/stdc++.h>
using namespace std;
struct kk{
    string s;
}a[22];

int ma(int b, int max) {

    int minx = min(a[b].s.size(),a[max].s.size());
        for(int i = 0; i < minx; i++) {
            if(a[b].s[i] < a[max].s[i]) return max;
            if(a[b].s[i] > a[max].s[i]) return b;
        }
        if(a[b].s.size() > a[max].s.size()) {
            if(a[b].s[minx] > a[max].s[0]) {
                return b;
            }else {
                return max;
            }
        }else {
            if(a[max].s[minx] > a[b].s[0]) {
                return max;
            }else {
                return b;
            }
        }
    return b;
}
int main()
{
    int n;
    cin>>n;
    for(int i = 0; i < n; i++) {
        cin>>a[i].s;
    }
    for(int i = 0; i < n-1; i++) {
        int max = i;
        for(int j = i+1; j < n; j++) {
            if(a[j].s[0] > a[max].s[0]) {
                max = j;
            }
            if(a[j].s[0] == a[max].s[0]) {
                int b = j;
                max = ma(b,max);
            }
        }
        struct kk t = a[i];
        a[i] = a[max];
        a[max] = t;
    }
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < a[i].s.size(); j++) 
            cout<<a[i].s[j];
    }
}
/*
  Two pieces of data from the test:
4
1341 133 1321 37
6
321 32 407 135 13 217

oh, the data let me find a lot of errors at my code.
firstly, 133 and 1321, which number at the front?
// originally, I put 1321 out front, that is put the one with the largest number goes first,
but 321 and 32 is not correct;
I think think think;
judge campare at the lest number ,this is the lest figure , the lest add one figure of the most number with 
the first figure of the smallest number 
such as: 133 1321 1 and 2; 321 32 1 and 3;
so 1331321 and 32321 is the largest number;
and there is one more problem:
why I use selection sort?
because it's my first thought;

*/
