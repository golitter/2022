//C++ STL Algorithm sort and sort(begin,last, cmp)
// and the essential is cmp;
#include <bits/stdc++.h>
using namespace std;
struct compe{
  int serial;
  int grade;
}com[5003];

bool cmp(compe a, compe b){
    if(a.grade == b.grade) {
        if(a.serial < b.serial) {
            return 1;//a > b;
        }
        else {
            return 0;//b > a;
        }
    }
    else {
        if(a.grade > b.grade) {
            return 1;//a > b;
        } else {
            return 0;//b > a;
        }
    }
}

int main()
{
  int people, hirenm;
  cin>>people>>hirenm;
  int request = hirenm + hirenm*0.5;
  for(int i = 0; i < people; i++) {
    cin>>com[i].serial>>com[i].grade;
  }
  sort(com, com+people, cmp);
  int kk = com[request-1].grade;
  int cont = 0;
  for(cont = 0; ; cont++) {
      if(com[cont].grade < kk) {
          break;
      }
  }
  cout<<kk<<" "<<cont<<endl;;
  for(int i = 0; i < cont; i++) {
    cout<<com[i].serial<<" "<<com[i].grade<<endl;
  }
}
/*
  cmp:
  bool cmp(int a, int b)
  {
  return a>b;// reverse sort; 3 1;
  }
  bool cmp2(int a, int b)
  {
  return a < b;// sort; 1 2;
  }
  bool cmpStruct(Struct a, Struct b)
  {
  if(a.grade < b.grade) return 1;
  }
*/
