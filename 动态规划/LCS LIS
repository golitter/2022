   :IS:
   
   for(int i = 1; i <= n; ++i) {
        dp[i] = 1;
        for(int j = 1; j < i; ++j) {
            if(a[j] < a[i]) dp[i] = max(dp[i], dp[j] + 1);
        }
    }
    cout<<*max_element(dp+1, dp+n+1)<<endl;
    Dilworth 定理
    狄尔沃斯定理亦称偏序集分解定理，该定理断言：对于任意有限偏序集，其最大反链中元素的数目必等于最小链划分中链的数目。
    此定理的对偶形式亦真，它断言：对于任意有限偏序集，其最长链中元素的数目必等于其最小反链划分中反链的数目。
    # 正难则反
    把序列分成不上升子序列的最少个数，等于序列的最长上升子序列长度。
    把序列分成不降子序列的最少个数，等于序列的最长下降子序列长度。
    导弹拦截：
    第一问，用一颗导弹可以拦截几个。
    第二问，至少多少个导弹可以全部拦截。
    
    nlogn
        des1[1] = init[1];
    des2[1] = init[1];
    int len1 = 1, len2 = 1;
    for(int i = 2; i <= n; i++) {
        if(des1[len1] >= init[i]) {
            des1[++len1] = init[i];
        } else {
            int tm = upper_bound(des1+1,des1+1+len1,init[i],greater<int>()) - des1;
            des1[tm] = init[i];
        }
        if(init[i] > des2[len2]) {
            des2[++len2] = init[i];
        } else {
            int tn = lower_bound(des2+1,des2+1+len2,init[i]) - des2;
            des2[tn] = init[i];
        }
    }
    cout<<len1<<endl<<len2;
